<?php

/**
 * @file
 * Custom module.
 */

use Drupal\Core\Url;
use Drupal\views\ViewExecutable;
use Drupal\Core\Form\FormStateInterface;
use Symfony\Component\HttpFoundation\Request;

/**
 * Implements hook_form_alter().
 */
function nfafmis_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  if ($form_id === 'comment_comment_form') {
    $form['actions']['submit']['#submit'][] = 'nfafmis_comment_comment_form_submit';
  }

  // Hide exposed form from certain page only.
  if ($form_id == 'views_exposed_form') {
    $include_id = [
      'views-exposed-form-farmer-filter-block-1',
      'views-exposed-form-farmer-main-tab-page-4',
      'views-exposed-form-farmer-main-tab-page-5',
      'views-exposed-form-farmer-main-tab-page-6',
      'views-exposed-form-farmer-main-tab-page-7'
    ];
    if (in_array($form['#id'], $include_id)) {
      $form['#attributes']['class'] = ['hidden'];
    }
  }

  if ($form_id == 'node_offer_license_form' || $form_id == 'node_offer_license__edit_form') {
    $form['field_license_id']['#states'] = [
      'visible' => [
        ':input[name="field_license_issued[value]"]' => ['checked' => TRUE],
      ],
    ];
    $form['field_license_date']['#states'] = [
      'visible' => [
        ':input[name="field_license_issued[value]"]' => ['checked' => TRUE],
      ],
    ];
    $form['actions']['submit']['#submit'][] = 'nfafmis_node_offer_license_form_submit';
  }

  if ($form_id == 'node_charge_form' || $form_id == 'node_charge_edit_form') {
    $form['actions']['submit']['#submit'][] = 'nfafmis_node_charge_form_submit';
  }

  if ($form_id == 'node_sub_area_form' || $form_id == 'node_sub_area_edit_form') {
    $offer_license_id = getOfferLicenseDetails();

    // Provide farmer id as arguments to the reference views to filter result.
    // This only works when widget is selected as autocompleted.
    if ($offer_license_id) {
      $form['field_areas_id']['widget'][0]['target_id']['#selection_settings']['view']['arguments'][] = $offer_license_id['offer_licence_id'];
    }

    $form['field_date_harvested']['#states'] = [
      'visible' => [
        ':input[name="field_area_harvested[value]"]' => ['checked' => TRUE],
      ],
    ];
  }
}

/**
 * Implements hook_views_pre_render().
 */
function nfafmis_views_pre_render(ViewExecutable $view) {
  $view->element['#attached']['library'][] = 'nfafmis/nfafmis';
}

function nfafmis_views_pre_view(ViewExecutable $view, $display_id, array &$args) {

  // Offer license ID.
  if ($view->id() == 'sub_areas_planting_status' && $display_id == 'block_4') {
    // We have pass farmer Id intentionaly to get offer license ID from that.
    if (!empty($args)) {
      $farmer_id = $args[0];
      // @TODO: get offer license ID.
      // $args = ['79']; // remove this hard coded value;
    }
  }
}

/**
 * Submit handler for commnet form.
 */
function nfafmis_comment_comment_form_submit($form,  FormStateInterface &$form_state) {
  $url = Url::fromUri('internal:/tree-farmer-overview');
  $form_state->setRedirectUrl($url);
}

/**
 * Submit handler for node_offer_license form.
 */
function nfafmis_node_offer_license_form_submit($form,  FormStateInterface &$form_state){
  $url = Url::fromUri('internal:/tree-farmer-overview/licences');
  $form_state->setRedirectUrl($url);
}

/**
 * Submit handler for node_charge form.
 */
function nfafmis_node_charge_form_submit($form,  FormStateInterface &$form_state){
  $url = Url::fromUri('internal:/tree-farmer-overview/accounts');
  $form_state->setRedirectUrl($url);
}

/**
 * Implements computed_field_field_area_id_compute().
 */
function computed_field_field_area_id_compute($entity_type_manager, $entity, $fields, $delta) {
  $value = 'AREA/'. time();
  return $value;
}

/**
 * Get offer license ID.
 */
function getOfferLicenseDetails() {
  // Getting the referer.
  $request = \Drupal::request();
  $referer = $request->headers->get('referer');
  // Getting the base url.
  $base_url = Request::createFromGlobals()->getSchemeAndHttpHost();
  // Getting the alias or the relative path.
  $alias = substr($referer, strlen($base_url));

  $query_params = $request->query->all();
  if ($alias == '/tree-farmer-overview/sub-areas' || !empty($query_params)) {
    return $query_params;
  }
  return NULL;
}
